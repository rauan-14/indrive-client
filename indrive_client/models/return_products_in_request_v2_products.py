# coding: utf-8

"""
    Public API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.7.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ReturnProductsInRequestV2Products(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'price': 'float',
        'refund_amount': 'float',
        'refund_quantity': 'float'
    }

    attribute_map = {
        'id': 'id',
        'price': 'price',
        'refund_amount': 'refund_amount',
        'refund_quantity': 'refund_quantity'
    }

    def __init__(self, id=None, price=None, refund_amount=None, refund_quantity=None):  # noqa: E501
        """ReturnProductsInRequestV2Products - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._price = None
        self._refund_amount = None
        self._refund_quantity = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if price is not None:
            self.price = price
        if refund_amount is not None:
            self.refund_amount = refund_amount
        if refund_quantity is not None:
            self.refund_quantity = refund_quantity

    @property
    def id(self):
        """Gets the id of this ReturnProductsInRequestV2Products.  # noqa: E501

        external product id (id in  merchant system)  # noqa: E501

        :return: The id of this ReturnProductsInRequestV2Products.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReturnProductsInRequestV2Products.

        external product id (id in  merchant system)  # noqa: E501

        :param id: The id of this ReturnProductsInRequestV2Products.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def price(self):
        """Gets the price of this ReturnProductsInRequestV2Products.  # noqa: E501

        price of one product item  # noqa: E501

        :return: The price of this ReturnProductsInRequestV2Products.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ReturnProductsInRequestV2Products.

        price of one product item  # noqa: E501

        :param price: The price of this ReturnProductsInRequestV2Products.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def refund_amount(self):
        """Gets the refund_amount of this ReturnProductsInRequestV2Products.  # noqa: E501

        total amount of returned products (money)  # noqa: E501

        :return: The refund_amount of this ReturnProductsInRequestV2Products.  # noqa: E501
        :rtype: float
        """
        return self._refund_amount

    @refund_amount.setter
    def refund_amount(self, refund_amount):
        """Sets the refund_amount of this ReturnProductsInRequestV2Products.

        total amount of returned products (money)  # noqa: E501

        :param refund_amount: The refund_amount of this ReturnProductsInRequestV2Products.  # noqa: E501
        :type: float
        """

        self._refund_amount = refund_amount

    @property
    def refund_quantity(self):
        """Gets the refund_quantity of this ReturnProductsInRequestV2Products.  # noqa: E501

        refunded products quantity  # noqa: E501

        :return: The refund_quantity of this ReturnProductsInRequestV2Products.  # noqa: E501
        :rtype: float
        """
        return self._refund_quantity

    @refund_quantity.setter
    def refund_quantity(self, refund_quantity):
        """Sets the refund_quantity of this ReturnProductsInRequestV2Products.

        refunded products quantity  # noqa: E501

        :param refund_quantity: The refund_quantity of this ReturnProductsInRequestV2Products.  # noqa: E501
        :type: float
        """

        self._refund_quantity = refund_quantity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ReturnProductsInRequestV2Products, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReturnProductsInRequestV2Products):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
